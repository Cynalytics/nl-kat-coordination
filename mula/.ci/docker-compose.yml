version: "3.9"

services:
  ci_scheduler_unit:
    build:
      context: .
      args:
        ENVIRONMENT: dev
    volumes:
      - .:/app/scheduler
    env_file:
      - .ci/.env.test
    depends_on:
      ci_postgres:
        condition: service_healthy

  ci_scheduler_integration:
    build:
      context: .
      args:
        ENVIRONMENT: dev
    volumes:
      - .:/app/scheduler
    env_file:
      - .ci/.env.test
    depends_on:
      - ci_postgres
      - ci_bytes
      - ci_octopoes
      - ci_katalogus
      - ci_rabbitmq

  ci_postgres:
    image: postgres:15
    healthcheck:
      test: ["CMD", "gosu", "postgres", "pg_isready"]
      interval: 3s
      retries: 10
    env_file:
      - .ci/.env.test
    environment:
      APPS: "BYTES KATALOGUS SCHEDULER"
    volumes:
      - ../init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh

  ci_rabbitmq:
    image: "rabbitmq:3.11-management"
    volumes:
      - ./.ci/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 5s
      retries: 4

  ci_bytes:
    build:
      context: ../bytes
      dockerfile: Dockerfile
      target: dev
      args:
        ENVIRONMENT: dev
    command: uvicorn bytes.api:app --host 0.0.0.0 --port 8000 --reload --reload-dir /app/bytes/bytes
    ports:
      - "127.0.0.1:8002:8000"
    env_file:
      - .ci/.env.test
    volumes:
      - ../bytes/:/app/bytes
      - bytes-data:/data
    depends_on:
      ci_postgres:
        condition: service_healthy

  ci_katalogus:
    build:
      context: ..
      dockerfile: boefjes/Dockerfile
      target: dev
      args:
        ENVIRONMENT: dev
    command: uvicorn boefjes.katalogus.api:app --host 0.0.0.0
    ports:
      - "127.0.0.1:8003:8000"
    env_file:
      - .ci/.env.test
    volumes:
      - ../boefjes/:/app/boefjes
      - ../octopoes/octopoes:/app/boefjes/octopoes
    depends_on:
      ci_postgres:
        condition: service_healthy

  ci_octopoes:
    build:
      context: ../octopoes/
      target: dev
      args:
        ENVIRONMENT: dev
    ports:
      - "127.0.0.1:8001:80"
    env_file:
      - .ci/.env.test
    command: uvicorn octopoes.api.api:app --host 0.0.0.0 --port 80 --reload --reload-dir /app/octopoes/octopoes
    volumes:
      - ../octopoes:/app/octopoes
    depends_on:
      ci_crux:
        condition: service_started
      ci_rabbitmq:
        condition: service_healthy

  ci_crux:
    image: "ghcr.io/dekkers/xtdb-http-multinode:main"
    restart: unless-stopped
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - xtdb-data:/var/lib/xtdb

volumes:
  bytes-data:
  xtdb-data:
