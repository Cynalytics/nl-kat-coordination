[tool.black]
target-version = ["py38"]
line-length = 120

[tool.mypy]
python_version = "3.8"
plugins = ["pydantic.mypy"]
strict = false
ignore_missing_imports = true
follow_imports = "skip"
disallow_untyped_decorators = false # Needed for FastAPI decorators

[tool.vulture]
min_confidence = 90
exclude = ["/tests/", "*venv*"]
paths = ["."]


[tool.ruff]
# Enable classic flake8, pyflakes, eradicate, and tidyimport
# To be extended with DJ, PT, RUF, C90, D, PL, RET
select = ["E", "F", "ERA", "W", "TID", "I", "G", "INP", "T20", "UP", "ISC", "PTH", "SIM", "PLC", "A"]
# non-pep585-annotation and non-pep604-annotation are not actually compatible with 3.8
ignore = ["UP006", "UP007", "A003"]
fix = true

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "old",
    "dist",
    "node_modules",
    "venv",
    "__pycache__"

]

# Same as Black.
line-length = 120

# Support Python 3.8 and higher
target-version = "py38"

# Add "Example" to allowed code comments
task-tags = ["Example", "todo", "TODO", "FIXME"]


[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"whitelist.py" = ["F821", "INP"]
"rocky/*/migrations/*.py" = ["E501"]
"octopoes/bits/check_csp_header/check_csp_header.py" = ["ERA001"]
"boefjes/boefjes/plugins/kat_binaryedge/http_web/normalize.py" = ["ERA001"]
"*/packaging/*" = ["INP"]
"*/.ci/*" = ["INP"]
"conf.py" = ["INP", "PTH", "A"]
"conftest.py" = ["INP"]
"setup.py" = ["INP"]
"manage.py" = ["INP"]
"*/tests/*" = ["T20"]
"boefjes/boefjes/plugins/*" = ["PTH"]

[tool.ruff.flake8-tidy-imports]
[tool.ruff.flake8-tidy-imports.banned-api]
"rocky.settings".msg = "Use django.conf.settings"

[tool.codespell]
ignore-words-list = 'edn,juxt'

[build-system]
requires = ["setuptools>=65", "setuptools_scm[toml]>=7.1"]

[tool.setuptools]
packages = ["rocky", "octopoes", "keiko", "boefjes", "mula", "bytes"]

[tool.setuptools_scm]
write_to = "_version.py"

[project]
name = "openkat"
version = "0.0.1.dev1"
description = "OpenKAT coordination package"
authors = [
    { name = "MinVWS", email = "maintainer@openkat.nl" }
]
license = { text = "EUPL" }
readme = "README.rst"
requires-python = ">=3.8"

[project.optional-dependencies]
dev = [
    "pre-commit==3.3.2",
    "sphinx==6.1.3",
    "sphinx_rtd_theme==1.2.0",
    "sphinxcontrib-mermaid==0.8.1",
    "myst-parser==1.0.0"
]

octopoes = [
    "requests==2.31.0",
    "pydantic==1.10.8",
    "fastapi==0.88.0",
    "fastapi-utils==0.2.1",
    "uvicorn==0.20.0",
    "pika==1.3.1",
    "PyYAML==6.0",
    "dnspython==2.2.1",
    "kombu==5.2.4",
    "celery==5.2.7",
    "pyparsing==3.0.9",
    "packaging==23.0",
    "tldextract==3.4.0",
    "opentelemetry-sdk==1.17.0",
    "opentelemetry-exporter-otlp-proto-grpc==1.17.0",
    "opentelemetry-instrumentation-fastapi==0.38b0",
    "opentelemetry-instrumentation-requests==0.38b0",
    "certifi==2023.5.7",
    "sqlalchemy==1.4.48",
]

octopoes-dev = [
    "requests-mock==1.10.0",
    "pytest==7.2.2",
    "robotframework-tidy==3.2",
    "robotframework==6.0.1",
    "robotframework-httplibrary==0.4.2",
    "robotframework-requests==0.9.3",
    "pytest-cov==4.0.0",
    "pytest-mock==3.10.0",
    "httpx==0.23.0",
]

keiko = [
    "click==8.1.3",
    "pydantic==1.10.8",
    "Jinja2==3.1.2",
    "fastapi==0.85.2",
    "uvicorn==0.19.0",
    "opentelemetry-sdk==1.17.0",
    "opentelemetry-exporter-otlp-proto-grpc==1.17.0",
    "opentelemetry-instrumentation-fastapi==0.38b0",
    "requests==2.31.0",
    "certifi==2023.5.7"
]

keiko-dev = [
    "pytest==7.2.2",
    "robotframework-tidy==3.2",
    "robotframework==6.0.1",
    "robotframework-debuglibrary==2.3.0",
    "robotframework-requests==0.9.3"
]
